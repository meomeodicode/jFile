spring:
    datasource:
        url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
        username: ${DB_USERNAME:postgres}
        password: ${POSTGRESQL_PASS}

    liquibase:
        change-log: classpath:db/changelog/db.changelog-master.xml
        enabled: true
        user: ${DB_USERNAME:postgres}
        password: ${POSTGRESQL_PASS}
        url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}

    kafka: 
        topics: 
            downloads: download-topics
        consumer:
            group-id: download-service-group
            auto-offset-reset: earliest
            bootstrap-servers: localhost:9092
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            properties:
                spring.json.trusted.packages: "jfile.model"
                spring.json.type.mapping: downloadTask:jfile.model.DownloadTask
        producer:
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    jpa:
        show-sql: true
        
download:
    destination: ${DOWNLOAD_PATH}
  
logging:
  level:
    root: INFO
    jfile: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG

minio:
    endpoint: ${MINIO_ENDPOINT}
    access-key: ${MINIO_ACCESS_KEY}
    secret-key: ${MINIO_SECRET_KEY}
    bucket: ${MINIO_BUCKET}

